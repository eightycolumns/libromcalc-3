LIBROMCALC 3.0 (FICKLE FALCON)

  This is a regex-free rewrite of libromcalc.

DEPENDENCIES

  First, install check:
    apt-get install check

  Then, install pkg-config:
    apt-get install pkg-config

BUILD

  To build libromcalc.a and its test executable:
    make

  To run all tests:
    make check

  To return everything to its pre-build state:
    make clean

USAGE

  Libromcalc provides functions to add and subtract Roman numerals.

  The addition function has the signature
    int add(char *sum, const char *augend, const char *addend);

  It adds the Roman numeral addend to the Roman numeral augend and writes the
  resulting Roman numeral to the buffer pointed to by sum. It returns 0 on
  success, or an error code indicating the cause of failure.

  The subtraction function has the signature
    int subtract(char *difference, const char *minuend, const char *subtrahend);

  It subtracts the Roman numeral subtrahend from the Roman numeral minuend and
  writes the resulting Roman numeral to the buffer pointed to by difference. It
  returns 0 on success, or an error code indicating the cause of failure.

  Both add() and subtract()
    - Accept uppercase and lowercase operands
    - Reject mixed-case operands
    - Write their results in uppercase regardless of their operands' cases

  On failure, add() and subtract() return one of the following error codes:

  ROMCALC_NULL_POINTER_ERROR
    One or more arguments were null pointers.
  ROMCALC_INVALID_OPERAND_ERROR
    One or more operands were invalid Roman numerals.
  ROMCALC_INVALID_RESULT_ERROR
    Both operands were valid Roman numerals, but the result of the operation
    could not be converted to a valid Roman numeral.

  The macro ROMCALC_MAX_LENGTH represents the number of bytes needed to store the
  longest possible Roman numeral, including the terminating null byte.

  Recommended usage:
    char sum[ROMCALC_MAX_LENGTH];
    add(sum, "MDCLXVI", "MMCCXXII");
